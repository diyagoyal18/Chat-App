{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/diya18/ic-projects/notification_app/app/chat/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function Chat({ socket }: any) {\n    const [message, setMessage] = useState('');\n    const [typing, setTyping] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n\n    useEffect(() => {\n        socket.off('newMessage').on('newMessage', (msg: string) => {\n            setMessages((prev) => [...prev, msg]);\n        });\n    }, [socket]);\n\n    function handleSend() {\n        if (message.trim() !== '') {\n            socket.emit('message', message);\n            setMessage('');\n        }\n    }\n\n    function handleTyping() {\n        if (!typing) {\n            setTyping(true);\n            socket.emit('typing', 'User');\n            setTimeout(() => setTyping(false), 2000);\n        }\n    }\n\n    return (\n        <div style={{ padding: '1rem' }}>\n            <h1>Chat</h1>\n            <div style={{ border: '1px solid #ccc', height: 200, overflowY: 'auto', marginBottom: 8 }}>\n                {messages.map((m, i) => (\n                    <div key={i}>{m}</div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={message}\n                onChange={(e) => {\n                    setMessage(e.target.value);\n                    handleTyping();\n                }}\n            />\n            <button onClick={handleSend} style={{ marginLeft: 8 }}>Send</button>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,KAAK,EAAE,MAAM,EAAO;IACxC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAErD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,OAAO,GAAG,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC;YACvC,YAAY,CAAC,OAAS;uBAAI;oBAAM;iBAAI;QACxC;IACJ,GAAG;QAAC;KAAO;IAEX,SAAS;QACL,IAAI,QAAQ,IAAI,OAAO,IAAI;YACvB,OAAO,IAAI,CAAC,WAAW;YACvB,WAAW;QACf;IACJ;IAEA,SAAS;QACL,IAAI,CAAC,QAAQ;YACT,UAAU;YACV,OAAO,IAAI,CAAC,UAAU;YACtB,WAAW,IAAM,UAAU,QAAQ;QACvC;IACJ;IAEA,qBACI,8OAAC;QAAI,OAAO;YAAE,SAAS;QAAO;;0BAC1B,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAI,OAAO;oBAAE,QAAQ;oBAAkB,QAAQ;oBAAK,WAAW;oBAAQ,cAAc;gBAAE;0BACnF,SAAS,GAAG,CAAC,CAAC,GAAG,kBACd,8OAAC;kCAAa;uBAAJ;;;;;;;;;;0BAGlB,8OAAC;gBACG,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC;oBACP,WAAW,EAAE,MAAM,CAAC,KAAK;oBACzB;gBACJ;;;;;;0BAEJ,8OAAC;gBAAO,SAAS;gBAAY,OAAO;oBAAE,YAAY;gBAAE;0BAAG;;;;;;;;;;;;AAGnE"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///home/diya18/ic-projects/notification_app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}